<?xml version="1.0" encoding="UTF-8"?>
<project name="EV3-Gamepad" basedir="." default="build">

    <!-- Hook into One-Jar project -->
    <available property="one-jar.dir" file="../one-jar/build.onejar.xml" value="../one-jar"/>
    <!-- Will be ignored if available above -->
	<property name="one-jar.dir" location="one-jar" />
    <import file="${one-jar.dir}/build.onejar.xml"/>
    
	<property name="eclipse.jar-in-jar.dir" value="build-lib/eclipse"/>
	<property name="temp.dir" value="temp" />	
    <path id="libraries">
    	<fileset dir="lib" includes="*.jar"/>
    </path>
    
    <target name="mkdirs">
        <mkdir dir="${test.results.dir}" />
        <mkdir dir="${test.reports.dir}"/>
        <mkdir dir="classes/src"/>
    	<mkdir dir="classes/test"/>
        <mkdir dir="classes/junit"/>
    	<mkdir dir="build"/>
    </target>

	<target name="build" depends="clean, mkdirs, compile, build.EV3-Gamepad" />

	<target name="clean">
		<delete dir="classes" />
	</target>
	
	<target name="distclean" depends="clean" description="clean distribution">
	    <delete dir="build"/>
		<delete dir="test-reports"/>
	    <delete dir="test-results"/>
	</target>

	<target name="compile" depends="mkdirs">
        <javac destdir="classes/src" includes="**/*.java" debug="true" source="1.7" target="1.7">
            <src path="src" />
            <classpath refid="libraries" />
            <classpath refid="one-jar.libraries"/>
            <classpath path="${one-jar.ant.jar}"/>
        </javac>
        <javac destdir="classes/test" includes="**/*.java" debug="true" source="1.7" target="1.7">
            <src path="test" />
            <classpath refid="libraries" />
            <classpath refid="one-jar.libraries"/>
            <classpath path="${one-jar.ant.jar}"/>
        </javac>
        <javac destdir="classes/junit" includes="**/*.java" debug="true" source="1.7" target="1.7">
            <src path="junit" />
            <classpath refid="libraries" />
            <classpath refid="one-jar.libraries"/>
            <!-- Uses Invoker to set up a JUnit test bridge -->
        	<classpath path="classes/test"/>
        </javac>
	</target>

    <!-- Build the One-Jar -->
	<target name="build.EV3-Gamepad">
		<mkdir dir="build"/>
		<unzip src="lib/jinput-2.0.6.jar" dest="classes/src/">
			<patternset>
				<include name="**/*.class"/>
			</patternset>
		</unzip>
		<unzip src="lib/jutils-1.0.0.jar" dest="classes/src/">
			<patternset>
				<include name="**/*.class"/>
			</patternset>
		</unzip>
		<one-jar destfile="build/EV3-Gamepad.jar">
            <manifest>
                <attribute name="Main-Class" value="com.auryan898.ev3gamepad.Boot"/>
                <attribute name="One-Jar-Main-Class" value="com.auryan898.ev3gamepad.BootDefault"/>
            </manifest>
            <main>
                <fileset dir="classes/src"/>
            </main>
            <lib>
                <fileset dir="lib" includes="*.jar" />
            </lib>
			<binlib>
				<fileset dir="binlib"/>
			</binlib>
		</one-jar>
		<one-jar destfile="build/test-EV3-Gamepad.jar">
            <manifest>
                <attribute name="Main-Class" value="com.auryan898.ev3gamepad.Boot"/>
            	<attribute name="One-Jar-Main-Class" value="com.auryan898.ev3gamepad.test.Test"/>
            </manifest>
            <zipfileset src="${one-jar.ant.jar}" includes="**/Testable.class"/>
			<main>
				<fileset dir="classes/test"/>
			</main>
			<lib>
				<fileset dir="lib" includes="*.jar" />
			</lib>
		</one-jar>
		<delete dir="${temp.dir}" />
	</target>

    <property name="formatter" value="xml" />

    <!-- Test the distribution -->
    <target name="junit.report.EV3-Gamepad" depends="build" description="JUnit test of EV3_Gamepad">
        <antcall target="junit.EV3-Gamepad" />
        <antcall target="junit.report"/>   
    </target>
   
    <target name="junit.EV3-Gamepad" depends="build">
        <echo>********** junit-EV3-Gamepad.jar</echo>
        <junit fork="yes" showoutput="no" printsummary="yes">
            <jvmarg value="-Done-jar.verbose=true" />
            <jvmarg value="-Done-jar.jarname=${basedir}/build/test-EV3-Gamepad.jar" />
            <classpath>
                <fileset file="${basedir}/build/test-EV3-Gamepad.jar" />
                <path refid="one-jar.libraries"/>
            	<path location="classes/junit" />
            </classpath>

            <!-- Uses Invoker to set up a JUnit test bridge -->
            <test name="com.auryan898.ev3gamepad.test.EV3GamepadSuite" todir="${test.results.dir}" outfile="EV3GamepadSuite" />
            <formatter type="${formatter}" usefile="yes" />
        </junit>
    </target>

    <target name="run.EV3-Gamepad" depends="build" description="Run a One-Jar EV3_Gamepad">
        <java fork="true" jar="build/EV3-Gamepad.jar"/>
    </target>

	<target name="test.EV3-Gamepad" depends="build" description="Stand-alone test a One-Jar EV3_Gamepad">
        <java fork="true" jar="build/test-EV3-Gamepad.jar"/>
    </target>
	
</project>
